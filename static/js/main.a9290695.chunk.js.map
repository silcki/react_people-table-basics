{"version":3,"sources":["components/Navigation/Navigation.tsx","App.tsx","pages/HomePage.tsx","pages/NotFoundPage.tsx","components/Loader/Loader.tsx","api.ts","store/PeopleContext.tsx","components/People/PersonLink.tsx","components/People/People.tsx","pages/PeoplePage.tsx","Root.tsx","index.tsx"],"names":["Navigation","activeClass","isActive","classNames","className","role","to","App","HomePage","NotFoundPage","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeopleContext","React","createContext","people","loading","errorMessage","PeopleProvider","children","useState","setPeople","setLoading","setErrorMessage","preparePeople","data","changedPeople","map","child","mother","father","motherName","find","name","fatherName","useEffect","catch","finally","value","useMemo","Provider","PersonLink","person","slug","sex","People","useParams","realSlug","born","died","PeoplePage","useContext","length","Root","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.a9290695.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\nexport const Navigation: React.FC = () => {\n  const activeClass = (\n    { isActive } : { isActive: boolean },\n  ) => classNames('navbar-item', {\n    'has-background-grey-lighter': isActive,\n  });\n\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink to=\"/\" className={activeClass}>Home</NavLink>\n          <NavLink to=\"/people\" className={activeClass}>People</NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Outlet } from 'react-router-dom';\n\nimport './App.scss';\nimport { Navigation } from './components/Navigation';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navigation />\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","export const HomePage = () => <h1 className=\"title\">Home Page</h1>;\n","export const NotFoundPage = () => <h1 className=\"title\">Page not found</h1>;\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import React, {\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport { Person } from '../types';\nimport { getPeople } from '../api';\nimport { PeopleContextType } from './PeopleContextType';\n\nexport const PeopleContext = React.createContext<PeopleContextType>({\n  people: [],\n  loading: false,\n  errorMessage: '',\n});\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const PeopleProvider: React.FC<Props> = ({ children }) => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const preparePeople = (data: Person[]) => {\n    const changedPeople = data.map(child => {\n      let mother;\n      let father;\n\n      if (child.motherName) {\n        mother = data.find(({ name }) => child.motherName === name);\n      }\n\n      if (child.fatherName) {\n        father = data.find(({ name }) => child.fatherName === name);\n      }\n\n      return { ...child, father, mother };\n    });\n\n    setPeople(changedPeople);\n  };\n\n  useEffect(() => {\n    setLoading(true);\n    getPeople()\n      .then(preparePeople)\n      .catch(() => {\n        setErrorMessage('Unable to load people');\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, []);\n\n  const value = useMemo(() => ({\n    people,\n    loading,\n    errorMessage,\n  }), [\n    loading,\n    errorMessage,\n  ]);\n\n  return (\n    <PeopleContext.Provider value={value}>\n      {children}\n    </PeopleContext.Provider>\n  );\n};\n\nexport function usePeople() {\n  return useContext(PeopleContext);\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  return (\n    <Link\n      to={person.slug}\n      className={classNames({\n        'has-text-danger': person.sex === 'f',\n      })}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\nimport { PersonLink } from './PersonLink';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const People: React.FC<Props> = ({ people }) => {\n  const { slug } = useParams();\n  const realSlug = slug ?? null;\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <tr\n            data-cy=\"person\"\n            key={person.slug}\n            className={classNames({\n              'has-background-warning': person.slug === realSlug,\n            })}\n          >\n            <td>\n              <PersonLink person={person} />\n            </td>\n            <td>{person.sex}</td>\n            <td>{person.born}</td>\n            <td>{person.died}</td>\n            <td>\n              {person.mother\n                ? (\n                  <PersonLink person={person.mother} />\n                ) : (\n                  person.motherName || '-'\n                )}\n            </td>\n            <td>\n              {person.father\n                ? (\n                  <PersonLink person={person.father} />\n                ) : (\n                  person.fatherName || '-'\n                )}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { Loader } from '../components/Loader';\nimport { usePeople } from '../store/PeopleContext';\nimport { People } from '../components/People';\n\nexport const PeoplePage = () => {\n  const {\n    people,\n    loading,\n    errorMessage,\n  } = usePeople();\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {loading && (\n            <Loader />\n          )}\n          {!!people.length && (\n            <People people={people} />\n          )}\n          {!loading && !people.length && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n          {errorMessage && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import {\n  HashRouter,\n  Routes,\n  Route,\n  Navigate,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { HomePage } from './pages/HomePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { PeopleProvider } from './store/PeopleContext';\n\nexport const Root = () => {\n  return (\n    <HashRouter>\n      <PeopleProvider>\n        <Routes>\n          <Route path=\"/\" element={<App />}>\n            <Route path=\"*\" element={<NotFoundPage />} />\n            <Route index element={<HomePage />} />\n            <Route path=\"people\" element={<PeoplePage />}>\n              <Route path=\":slug\" element={<PeoplePage />} />\n            </Route>\n            <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          </Route>\n        </Routes>\n      </PeopleProvider>\n    </HashRouter>\n  );\n};\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Root } from './Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Root />,\n  );\n"],"sourceRoot":""}